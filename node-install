#!/bin/bash

TARGET_VERSION=""
PREFIX=""
ARCH="linux-x64"

usage() {
    echo "Usage:"
    echo "  $0 --target VERSION --prefix PATH [OPTIONS...]"
    echo "Options:"
    echo "  --help                     display this help and exit"
    echo "  --target VERSION           target version to install"
    echo "  --prefix PATH              path prefix"
    echo "  --arch ARCH                target architecture [linux-x64]"
}

OPTS=`getopt -o h --long help,target:,prefix:,arch: -- "$@"`
[ $? -ne 0 ] && usage && exit 1

eval set -- "$OPTS"

while true; do
    case "$1" in
        --help)           usage && exit 0;;
        --target)         TARGET_VERSION="$2"; shift 2;;
        --prefix)         PREFIX="$2";         shift 2;;
        --arch)           ARCH="$2";           shift 2;;
        --) shift; break;;
    esac
done

if [ "x"$TARGET_VERSION = "x" -o "x"$PREFIX = "x" ]; then
    usage
    exit 0
fi

cd $(dirname $0)

ARCHIVE_FILENAME="node-"$TARGET_VERSION"-"$ARCH".tar.gz"
ARCHIVE_DIRNAME="node-"$TARGET_VERSION"-"$ARCH

set -e
mkdir -p var/node-archive
cd var/node-archive
curl -s -O http://nodejs.org/dist/$TARGET_VERSION/$ARCHIVE_FILENAME

cd ..
tar xzf node-archive/$ARCHIVE_FILENAME

if [ -d $PREFIX ]; then
    [[ -d $PREFIX.replaced ]] && rm -rf $PREFIX.replaced
    mv $PREFIX $PREFIX.replaced
else
    mkdir -p $LOCATION && rmdir $LOCATION
fi
mv $ARCHIVE_DIRNAME $LOCATION

$LOCATION/bin/npm install -g node-gyp > /tmp/$USER-node-install-npm.log 2>&1
RETVAL=$?
if [ $RETVAL != 0 ]; then
    echo "npm install failed. see log /tmp/$USER-node-install-npm.log"
    exit 2
fi

echo "node $TARGET_VERSION successfully installed on $LOCATION"
echo "To use this node, do 'export PATH=$LOCATION/bin:\$PATH'."
